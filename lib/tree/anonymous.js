"use strict";

var Node = require("./node");

var Anonymous = function Anonymous(value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {
    this.value = value;
    this._index = index;
    this._fileInfo = currentFileInfo;
    this.mapLines = mapLines;
    this.rulesetLike = typeof rulesetLike === 'undefined' ? false : rulesetLike;
    this.allowRoot = true;
    this.copyVisibilityInfo(visibilityInfo);
};
Anonymous.prototype = new Node();
Anonymous.prototype.type = "Anonymous";
Anonymous.prototype.eval = function () {
    return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());
};
Anonymous.prototype.compare = function (other) {
    return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;
};
Anonymous.prototype.isRulesetLike = function () {
    return this.rulesetLike;
};
Anonymous.prototype.genCSS = function (context, output) {
    this.nodeVisible = Boolean(this.value);
    if (this.nodeVisible) {
        output.add(this.value, this._fileInfo, this._index, this.mapLines);
    }
};
module.exports = Anonymous;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmVlL2Fub255bW91cy5qcyJdLCJuYW1lcyI6WyJOb2RlIiwicmVxdWlyZSIsIkFub255bW91cyIsInZhbHVlIiwiaW5kZXgiLCJjdXJyZW50RmlsZUluZm8iLCJtYXBMaW5lcyIsInJ1bGVzZXRMaWtlIiwidmlzaWJpbGl0eUluZm8iLCJfaW5kZXgiLCJfZmlsZUluZm8iLCJhbGxvd1Jvb3QiLCJjb3B5VmlzaWJpbGl0eUluZm8iLCJwcm90b3R5cGUiLCJ0eXBlIiwiZXZhbCIsImNvbXBhcmUiLCJvdGhlciIsInRvQ1NTIiwidW5kZWZpbmVkIiwiaXNSdWxlc2V0TGlrZSIsImdlbkNTUyIsImNvbnRleHQiLCJvdXRwdXQiLCJub2RlVmlzaWJsZSIsIkJvb2xlYW4iLCJhZGQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE9BQU9DLFFBQVEsUUFBUixDQUFYOztBQUVBLElBQUlDLFlBQVksU0FBWkEsU0FBWSxDQUFVQyxLQUFWLEVBQWlCQyxLQUFqQixFQUF3QkMsZUFBeEIsRUFBeUNDLFFBQXpDLEVBQW1EQyxXQUFuRCxFQUFnRUMsY0FBaEUsRUFBZ0Y7QUFDNUYsU0FBS0wsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS00sTUFBTCxHQUFjTCxLQUFkO0FBQ0EsU0FBS00sU0FBTCxHQUFpQkwsZUFBakI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLFNBQUtDLFdBQUwsR0FBb0IsT0FBT0EsV0FBUCxLQUF1QixXQUF4QixHQUF1QyxLQUF2QyxHQUErQ0EsV0FBbEU7QUFDQSxTQUFLSSxTQUFMLEdBQWlCLElBQWpCO0FBQ0EsU0FBS0Msa0JBQUwsQ0FBd0JKLGNBQXhCO0FBQ0gsQ0FSRDtBQVNBTixVQUFVVyxTQUFWLEdBQXNCLElBQUliLElBQUosRUFBdEI7QUFDQUUsVUFBVVcsU0FBVixDQUFvQkMsSUFBcEIsR0FBMkIsV0FBM0I7QUFDQVosVUFBVVcsU0FBVixDQUFvQkUsSUFBcEIsR0FBMkIsWUFBWTtBQUNuQyxXQUFPLElBQUliLFNBQUosQ0FBYyxLQUFLQyxLQUFuQixFQUEwQixLQUFLTSxNQUEvQixFQUF1QyxLQUFLQyxTQUE1QyxFQUF1RCxLQUFLSixRQUE1RCxFQUFzRSxLQUFLQyxXQUEzRSxFQUF3RixLQUFLQyxjQUFMLEVBQXhGLENBQVA7QUFDSCxDQUZEO0FBR0FOLFVBQVVXLFNBQVYsQ0FBb0JHLE9BQXBCLEdBQThCLFVBQVVDLEtBQVYsRUFBaUI7QUFDM0MsV0FBT0EsTUFBTUMsS0FBTixJQUFlLEtBQUtBLEtBQUwsT0FBaUJELE1BQU1DLEtBQU4sRUFBaEMsR0FBZ0QsQ0FBaEQsR0FBb0RDLFNBQTNEO0FBQ0gsQ0FGRDtBQUdBakIsVUFBVVcsU0FBVixDQUFvQk8sYUFBcEIsR0FBb0MsWUFBVztBQUMzQyxXQUFPLEtBQUtiLFdBQVo7QUFDSCxDQUZEO0FBR0FMLFVBQVVXLFNBQVYsQ0FBb0JRLE1BQXBCLEdBQTZCLFVBQVVDLE9BQVYsRUFBbUJDLE1BQW5CLEVBQTJCO0FBQ3BELFNBQUtDLFdBQUwsR0FBbUJDLFFBQVEsS0FBS3RCLEtBQWIsQ0FBbkI7QUFDQSxRQUFJLEtBQUtxQixXQUFULEVBQXNCO0FBQ2xCRCxlQUFPRyxHQUFQLENBQVcsS0FBS3ZCLEtBQWhCLEVBQXVCLEtBQUtPLFNBQTVCLEVBQXVDLEtBQUtELE1BQTVDLEVBQW9ELEtBQUtILFFBQXpEO0FBQ0g7QUFDSixDQUxEO0FBTUFxQixPQUFPQyxPQUFQLEdBQWlCMUIsU0FBakIiLCJmaWxlIjoiYW5vbnltb3VzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIE5vZGUgPSByZXF1aXJlKFwiLi9ub2RlXCIpO1xuXG52YXIgQW5vbnltb3VzID0gZnVuY3Rpb24gKHZhbHVlLCBpbmRleCwgY3VycmVudEZpbGVJbmZvLCBtYXBMaW5lcywgcnVsZXNldExpa2UsIHZpc2liaWxpdHlJbmZvKSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIHRoaXMuX2luZGV4ID0gaW5kZXg7XG4gICAgdGhpcy5fZmlsZUluZm8gPSBjdXJyZW50RmlsZUluZm87XG4gICAgdGhpcy5tYXBMaW5lcyA9IG1hcExpbmVzO1xuICAgIHRoaXMucnVsZXNldExpa2UgPSAodHlwZW9mIHJ1bGVzZXRMaWtlID09PSAndW5kZWZpbmVkJykgPyBmYWxzZSA6IHJ1bGVzZXRMaWtlO1xuICAgIHRoaXMuYWxsb3dSb290ID0gdHJ1ZTtcbiAgICB0aGlzLmNvcHlWaXNpYmlsaXR5SW5mbyh2aXNpYmlsaXR5SW5mbyk7XG59O1xuQW5vbnltb3VzLnByb3RvdHlwZSA9IG5ldyBOb2RlKCk7XG5Bbm9ueW1vdXMucHJvdG90eXBlLnR5cGUgPSBcIkFub255bW91c1wiO1xuQW5vbnltb3VzLnByb3RvdHlwZS5ldmFsID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBuZXcgQW5vbnltb3VzKHRoaXMudmFsdWUsIHRoaXMuX2luZGV4LCB0aGlzLl9maWxlSW5mbywgdGhpcy5tYXBMaW5lcywgdGhpcy5ydWxlc2V0TGlrZSwgdGhpcy52aXNpYmlsaXR5SW5mbygpKTtcbn07XG5Bbm9ueW1vdXMucHJvdG90eXBlLmNvbXBhcmUgPSBmdW5jdGlvbiAob3RoZXIpIHtcbiAgICByZXR1cm4gb3RoZXIudG9DU1MgJiYgdGhpcy50b0NTUygpID09PSBvdGhlci50b0NTUygpID8gMCA6IHVuZGVmaW5lZDtcbn07XG5Bbm9ueW1vdXMucHJvdG90eXBlLmlzUnVsZXNldExpa2UgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5ydWxlc2V0TGlrZTtcbn07XG5Bbm9ueW1vdXMucHJvdG90eXBlLmdlbkNTUyA9IGZ1bmN0aW9uIChjb250ZXh0LCBvdXRwdXQpIHtcbiAgICB0aGlzLm5vZGVWaXNpYmxlID0gQm9vbGVhbih0aGlzLnZhbHVlKTtcbiAgICBpZiAodGhpcy5ub2RlVmlzaWJsZSkge1xuICAgICAgICBvdXRwdXQuYWRkKHRoaXMudmFsdWUsIHRoaXMuX2ZpbGVJbmZvLCB0aGlzLl9pbmRleCwgdGhpcy5tYXBMaW5lcyk7XG4gICAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gQW5vbnltb3VzO1xuIl19